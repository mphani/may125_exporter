name: GPG sign rpm
on: 
  workflow_dispatch:
     inputs:
        release_tag_info:
          description: enter release tag number
          default: 
          required: true
jobs:
  signing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Install GPG
        run: sudo apt-get update && sudo apt-get install gnupg -y
      - name: setup GPG
        uses: aerospike/shared-workflows/devops/setup-gpg@feat/setup-gpg-composite
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-key-pass: ${{ secrets.GPG_PASS }}
          gpg-key-name: "phanitest"
      - name: Download RPM from Release “${{ github.event.inputs.tag }}”
        env:
          GH_TOKEN: ${{ github.token }}      
        run: |
          mkdir rpms
          gh release download ${{ github.event.inputs.release_tag_info }} \
            --pattern '*.rpm' \
            --dir rpms    
          echo
          echo listing downloaded rpms
          echo
          ls -lrt rpms/*
      - name: Sign RPM Package
        env:
          GPG_TTY: no-tty
          GPG_PASSPHRASE: ${{ secrets.GPG_PASS }}
          GH_TOKEN: ${{ github.token }}      
        run: |
          # sign a gpg
          echo
          echo signing-rpms in rpms folder
          files=$(find ./rpms -type f -name "aerospike-prome*.rpm" -printf "$(realpath -s %p) ")
          for file in $files; do
               echo "gpg signing rpm -- $file"
               gpg --detach-sign --no-tty --batch --yes --passphrase "$GPG_PASSPHRASE" $file
               # Sign the package
               # echo adding sign to rpm -- $file
               # rpm --addsign $file
          done            
          # gpg --detach-sign --no-tty --batch --yes --passphrase "$GPG_PASSPHRASE" rpms/*.rpm
          echo
          echo list files in rpms folder
          ls -lrt rpms/*
          echo listing other files
          ls -lrt
      - name: Sign and check rpm # gpg sign and verify rpm packages
        env:
          GPG_TTY: /dev/null
          HOME: /home/runner
          GNUPGHOME: /home/runner/.gnupg
        run: |
          # Ensure environment variables are exported
          export HOME="${HOME}"
          export GNUPGHOME="${GNUPGHOME}"

          # Create symlink for gpg2 (required for rpm signing)
          sudo ln -sf $(which gpg) /usr/bin/gpg2

          files=$(find ./rpms -type f -name "aerospike-prome*.rpm" -printf "$(realpath -s %p) ")
          for file in $files; do
               echo "Checking gpg signing of rpm -- $file"
               # Verify the signature
               rpm --checksig $file
          done            

